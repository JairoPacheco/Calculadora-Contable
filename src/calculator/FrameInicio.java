/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calculator;


import java.awt.Image;
import java.awt.event.ActionEvent;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;

/**
 *
 * @author yosin
 */
public class FrameInicio extends javax.swing.JFrame {
    ListaDenominacion DEN = ListaDenominacion.getInstance();
    public static FrameInicio instance = null;
    public static FrameInicio getInstance(){
        if(instance == null){
            instance = new FrameInicio();
        }
        return instance;
    }
    /**
     * Creates new form FrameInicio
     */
    public FrameInicio() {
        initComponents();
        DEN.SacarArchivo();
        if(DEN.listaMonedas.getSize()!=0){
            for (int i=0 ; i<=DEN.listaMonedas.getSize()-1;i++){
            Denominación denominacion = DEN.listaMonedas.get(i);
            jComboBox1.addItem(denominacion.getDenominacionNombre());
        }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Aceptar");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton2.setText("Nueva Moneda");
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("Crear Una Nueva Denominación ");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Tipo de Moneda a Utilizar");

        jButton3.setText("Eliminar Denominacion");
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(102, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(jLabel1))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(43, 43, 43)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(109, 109, 109))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       NewMoneda ven = new NewMoneda();
       this.dispose();
       ven.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String nombre = jComboBox1.getSelectedItem().toString();
        DEN.nombre = nombre;
        FrameDinero();
       this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String nombre = jComboBox1.getSelectedItem().toString();
        if(DEN.listaMonedas.getSize()>0){
            for(int i = 0 ; i<=DEN.listaMonedas.getSize()-1;i++){
            if(nombre.equals(DEN.listaMonedas.get(i).getDenominacionNombre())){
                DEN.listaMonedas.remove(i);
                DEN.MeterArchivo();
                FrameInicio f1 = new FrameInicio();
                f1.setVisible(true);
                this.dispose();
            }
        }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameInicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
    public void FrameDinero(){
        // Ventana
        JFrame Ventana = new JFrame();
        JLabel label= new JLabel();
        //Para recorrer el de las imagenes
        int n=0;
        //Para ir aumentando el indice 
        String image;
//Len de array de imagenes
        int lenArchivo=buscarTamano(DEN.nombre);       
        int lenarchivo2 =buscarTamano2(DEN.nombre);
        boolean flag = true;
        int cont = 0;
        int x = 0;
        int y =80;
        while(flag){
            if(cont == lenArchivo){
                flag = !flag;
                break;
            }
            if(x == 300){
                x = 0;
                y += 40;
            }
            n=n+1;
            try{
            image = DEN.listaMonedas.get(lenarchivo2).Imagen.get(n-1).imagen;
                  }catch(ArrayIndexOutOfBoundsException e){
            image = "";
            }
            ImageIcon icono= new ImageIcon(image);
            JButton b = new JButton();
            b.setName(""+DEN.listaMonedas.get(lenarchivo2).getImagen().get(n-1).valor);
            b.setBounds(x, y, 70, 35);
            b.setIcon(new ImageIcon(icono.getImage().getScaledInstance(b.getWidth()+10, b.getHeight(), Image.SCALE_SMOOTH)));
                b.addActionListener((ActionEvent e) -> {
                    double valor = Double.parseDouble(b.getName());
                    try{
                        int cantidad=Integer.parseInt(JOptionPane.showInputDialog("Digite la cantidad"));
                    for(int i=0;i<=DEN.listaMonedas.getSize()-1;i++){
                        for(int k = 0; k<=DEN.listaMonedas.get(i).Imagen.getSize()-1;k++){
                            if(DEN.listaMonedas.get(i).Imagen.get(k).valor == valor){
                                DEN.listaMonedas.get(i).Imagen.get(k).cantidad+=cantidad;
                            }
                        }
                    }
                    DEN.total = DEN.total+(valor*cantidad);
                    label.setText(""+DEN.total);
                    System.out.println(valor*cantidad);
                    }catch(NumberFormatException f){
                        JOptionPane.showMessageDialog(this, "porfavor digite un numero");
                    } 
            });
                
            x+=75;
            cont++;
            Ventana.add(b);
        }
        JButton Agregar = new JButton("Agregar moneda");
        Agregar.setBounds(0, 0, 120, 25);
        Agregar.addActionListener((ActionEvent e) -> {
            Moneda moneda= new Moneda();
            //Esto es para cerrar la ventana en la que está las monedas
            Ventana.hide();
            moneda.setVisible(true);
        });
        Ventana.add(Agregar);
        JButton Atras = new JButton("Atrás");
        Atras.setBounds(120, 0, 70, 25);
        Atras.addActionListener((ActionEvent e) -> {
            DEN.total=0;
            FrameInicio inicio= FrameInicio.getInstance();
            inicio.setVisible(true);
            Ventana.hide();
        });
        Ventana.add(Atras);
        JButton informe = new JButton("Informe");
        informe.setBounds(190, 0, 70, 25);
        Ventana.add(informe);
        informe.addActionListener((ActionEvent ae) -> {
            Informe();
        });
        JButton C = new JButton("C");
        C.setBounds(180,30,40,25);
        C.addActionListener((ActionEvent ae) -> {
            Reset();
            label.setText(""+DEN.total);
        });
        Ventana.add(C);
        JButton BM = new JButton("Borrar Moneda");
        BM.setBounds(260,0,120,25);
        BM.addActionListener((ActionEvent ae) -> {
            try{
                int cantidad=Integer.parseInt(JOptionPane.showInputDialog("Digite el valor de la moneda que quiere eliminar"));
            if(eliminarMonedas(cantidad))
                Ventana.hide();
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(this, "porfavor digite un numero");
            }
        });
        Ventana.add(BM);
        JButton BB = new JButton("Borrar Billete");
        BB.setBounds(380,0,120,25);
        BB.addActionListener((ActionEvent ae) -> {
            try{
                int cantidad=Integer.parseInt(JOptionPane.showInputDialog("Digite el valor del billete que quiere eliminar"));
            if(eliminarBilletes(cantidad))
                Ventana.hide();
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(this, "porfavor digite un numero");
            }
        });
        Ventana.add(BB);
        label.setBounds(30, 30, 150, 25);
        Border border = LineBorder.createGrayLineBorder ();
        label.setBorder(border);
        Ventana.add(label);
        label.setText(""+DEN.total);
        ///  todos los botones antes de esta linea de codigo ///
        // Se pone el tamaño de la ventana
        Ventana.setSize(600, 600);
        // Esto no se que es pero sale en el ejemplo
        Ventana.setLayout(null);
        // Se muestra la ventana
        Ventana.setVisible(true);
        // Se configura el boton de cerrar de la ventana
        Ventana.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); 
    }
    public int buscarTipo(){
        String nombre = jComboBox1.getSelectedItem().toString();
        DEN.nombre = nombre;
        for(int i =0; i<=DEN.listaMonedas.getSize();i++){
            if(DEN.listaMonedas.get(i).getDenominacionNombre().equals(DEN.nombre)){
               int lenArchivo=DEN.listaMonedas.get(i).getImagen().size();
               return lenArchivo;
            }
        }
        return 0;
    }
    public int buscarTamano(String nombre){
        for(int i =0; i<=DEN.listaMonedas.getSize();i++){
            if(DEN.listaMonedas.get(i).getDenominacionNombre().equals(DEN.nombre)){
               int lenArchivo=DEN.listaMonedas.get(i).getImagen().size();
               return lenArchivo;
            }
        }
        return 0;
    }
    public int buscarTamano2(String nombre){
        for(int i =0; i<=DEN.listaMonedas.getSize();i++){
            if(DEN.listaMonedas.get(i).getDenominacionNombre().equals(DEN.nombre)){
               int lenArchivo=i;
               return lenArchivo;
            }
        }
        return 0;
    }
    public void Reset(){
        DEN.total = 0;
        for (int i = 0; i<=DEN.listaMonedas.getSize()-1;i++){
            for (int k = 0;k<=DEN.listaMonedas.get(i).Imagen.getSize()-1;k++){
                DEN.listaMonedas.get(i).Imagen.get(k).cantidad=0;
            }
        }
    }
    public void Informe(){
        StringBuilder moneditas= new StringBuilder();
        String Monedass;        
        for (int i = 0; i<=DEN.listaMonedas.getSize()-1;i++){
            if(DEN.listaMonedas.get(i).getDenominacionNombre().equals(DEN.nombre)){
                for (int k = 0;k<=DEN.listaMonedas.get(i).Imagen.getSize()-1;k++){
                if(DEN.listaMonedas.get(i).Imagen.get(k) instanceof Monedas){
                    moneditas.append("Moneda");
                    moneditas.append("\n");
                    moneditas.append(DEN.listaMonedas.get(i).Imagen.get(k).valor);
                    moneditas.append(" = ");
                    moneditas.append(DEN.listaMonedas.get(i).Imagen.get(k).cantidad);
                    moneditas.append("\n");
                }
                if(DEN.listaMonedas.get(i).Imagen.get(k) instanceof Billetes){
                    moneditas.append("Billete");
                    moneditas.append("\n");
                    moneditas.append(DEN.listaMonedas.get(i).Imagen.get(k).valor);
                    moneditas.append(" = ");
                    moneditas.append(DEN.listaMonedas.get(i).Imagen.get(k).cantidad);
                    moneditas.append("\n");
                }
              } 
            }
            }
        Monedass=moneditas.toString();
        JOptionPane.showMessageDialog(null, Monedass);
        }
    public boolean eliminarMonedas(int precio){
        for (int i = 0; i<=DEN.listaMonedas.getSize()-1;i++){
            for ( int k = 0 ; k<=DEN.listaMonedas.get(i).Imagen.getSize()-1;k++){
                if(DEN.listaMonedas.get(i).Imagen.get(k) instanceof Monedas && DEN.listaMonedas.get(i).Imagen.get(k).valor == precio){
                    DEN.listaMonedas.get(i).Imagen.removeElementAt(k);
                    DEN.MeterArchivo();
                    FrameDinero();
                    return true;
                }
            }
        }
        return false;
    }
    public boolean eliminarBilletes(int precio){
        for (int i = 0; i<=DEN.listaMonedas.getSize()-1;i++){
            for ( int k = 0 ; k<=DEN.listaMonedas.get(i).Imagen.getSize()-1;k++){
                if(DEN.listaMonedas.get(i).Imagen.get(k) instanceof Billetes && DEN.listaMonedas.get(i).Imagen.get(k).valor == precio){
                    DEN.listaMonedas.get(i).Imagen.removeElementAt(k);
                    DEN.MeterArchivo();
                    FrameDinero();
                    return true;
                }
            }
        }
        return false;
    }
}
